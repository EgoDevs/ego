type AdminAppCreateRequest = record {
  logo : text;
  name : text;
  description : text;
  version : Version;
  app_id : text;
  category : Category;
  backend_data_hash : text;
  backend_data : vec nat8;
};
type AdminWalletCycleRechargeRequest = record {
  cycle : nat;
  comment : text;
  wallet_id : principal;
};
type AdminWalletProviderAddRequest = record {
  wallet_provider : principal;
  wallet_app_id : text;
};
type Category = variant { System; Vault };
type CycleInfo = record {
  records : vec CycleRecord;
  estimate_remaining : nat64;
};
type CycleRecord = record { ts : nat64; balance : nat };
type EgoError = record { msg : text; code : nat16 };
type InitArg = record { init_caller : opt principal };
type Result = variant { Ok; Err : EgoError };
type Result_1 = variant { Ok : nat; Err : text };
type Result_2 = variant { Ok; Err : text };
type Result_3 = variant { Ok : vec CycleRecord; Err : text };
type Result_4 = variant { Ok : CycleInfo; Err : text };
type Result_5 = variant { Ok : bool; Err : text };
type Result_6 = variant { Ok : vec text; Err : text };
type Version = record { major : nat32; minor : nat32; patch : nat32 };
service : (InitArg) -> {
  admin_app_create : (AdminAppCreateRequest) -> (Result);
  admin_wallet_cycle_recharge : (AdminWalletCycleRechargeRequest) -> (Result);
  admin_wallet_order_new : (float32) -> (Result);
  admin_wallet_provider_add : (AdminWalletProviderAddRequest) -> (Result);
  balance_get : () -> (Result_1) query;
  canister_main_track : (text) -> ();
  canister_relation_update : (text) -> ();
  ego_canister_add : (text, principal) -> (Result_2);
  ego_controller_add : (principal) -> (Result_2);
  ego_controller_remove : (principal) -> (Result_2);
  ego_controller_set : (vec principal) -> (Result_2);
  ego_cycle_check : () -> (Result_2);
  ego_cycle_estimate_set : (nat64) -> (Result_2);
  ego_cycle_history : () -> (Result_3) query;
  ego_cycle_info : () -> (Result_4);
  ego_cycle_recharge : (nat) -> (Result_2);
  ego_cycle_threshold_get : () -> (Result_1);
  ego_is_owner : () -> (Result_5) query;
  ego_is_user : () -> (Result_5) query;
  ego_log_list : (nat64) -> (Result_6) query;
  ego_op_add : (principal) -> (Result_2);
  ego_owner_add : (principal) -> (Result_2);
  ego_owner_add_with_name : (text, principal) -> (Result_2);
  ego_owner_remove : (principal) -> (Result_2);
  ego_owner_set : (vec principal) -> (Result_2);
  ego_runtime_cycle_threshold_get : () -> (Result_1);
  ego_user_add : (principal) -> (Result_2);
  ego_user_remove : (principal) -> (Result_2);
  ego_user_set : (vec principal) -> (Result_2);
}