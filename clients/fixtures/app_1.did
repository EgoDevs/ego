type AccountBalanceArgs = record { account : vec nat8 };
type FoxICWallet = record {
  transaction_fee : Tokens;
  subaccount : opt vec nat8;
  ledger_canister : principal;
  watch_balances : vec record { vec nat8; Tokens };
};
type HttpRequest = record {
  url : text;
  method : text;
  body : vec nat8;
  headers : vec record { text; text };
};
type HttpResponse = record {
  body : vec nat8;
  headers : vec record { text; text };
  upgrade : opt bool;
  status_code : nat16;
};
type Result = variant { Ok : nat64; Err : text };
type SendArgsSimple = record { account_id : text; amount : Tokens };
type Tokens = record { e8s : nat64 };
type TransferArgs = record {
  sub_account_to : opt vec nat8;
  principal_to : principal;
  amount : Tokens;
};
service : () -> {
  cycle_balance : () -> (nat);
  get_owner : () -> (text) query;
  http_request : (HttpRequest) -> (HttpResponse) query;
  is_owner : () -> (bool) query;
  set_conf : (FoxICWallet) -> ();
  set_owner : (principal) -> ();
  wallet_address_get : (opt vec nat8) -> (text) query;
  wallet_balance_get : (opt AccountBalanceArgs) -> (Tokens);
  wallet_icp_send : (SendArgsSimple) -> (Result);
  wallet_icp_transfer : (TransferArgs) -> (Result);
  wallet_url_get : (text) -> (text) query;
}